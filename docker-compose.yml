version: '3.10'

services:
  traefik:

    image: traefik:v2.10
    container_name: "traefik"
    command: --api.insecure=true --providers.docker
    ports:
      - "80:80"
      - "8080:8080"
    labels:
      - "traefik.http.routers.traefik.middlewares=traefik"
      - "traefik.http.routers.traefik.service=traefik-svc"
      - "traefik.http.services.traefik-svc.loadbalancer.server.port=8080"
      - "traefik.http.middlewares.traefik.basicauth.realm=Lab Notebook"
      - "traefik.http.middlewares.traefik.basicauth.usersfile=/etc/traefik/users.txt"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "./users.txt:/etc/traefik/users.txt"

  connexion:
    image: marcosf2/dragon-core
    build:
      context: ./dragon-core
    volumes:
      # For simplicity all of the data is stored in a mounted volume. The source of the mount is defined in .env
      - "${VOLUME_ORIGIN}:/home/pfafflab/nas"
    container_name: "dragon-core"
    env_file:
      - .env
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.connexion.rule=Host(`${TRAEFIK_HOST}`) && PathPrefix(`/api`)"
      - "traefik.http.routers.connexion.middlewares=traefik"
      - "traefik.http.services.connexion.loadbalancer.server.port=8000"
      - "traefik.http.middlewares.connexion.basicauth.realm=Lab Notebook"

#    develop:
#      watch:
#        - action: rebuild
#          path: .

  nextjs:
    image: marcosf2/dragon-scales
    container_name: "dragon-scales"
    build:
      context: ./dragon-scales
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nextjs.rule=Host(`${TRAEFIK_HOST}`)"
      - "traefik.http.services.nextjs.loadbalancer.server.port=3000"
      - "traefik.http.routers.nextjs.middlewares=traefik"
      - "traefik.http.middlewares.nextjs.basicauth.realm=Lab Notebook"

#    develop:
#      watch:
#        - action: rebuild
#          path: ../dragon-core-webapp/

networks:
  monitor:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 192.168.1.0/24
    driver_opts:
      com.docker.network.driver.mtu: 1450