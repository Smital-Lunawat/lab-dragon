version: '3.10'

services:
  traefik:

    image: traefik:v2.10
    container_name: "traefik"
    command: --api.insecure=true --providers.docker
    ports:
      - "80:80"
      - "8080:8080"
    labels:
      - "traefik.http.routers.traefik.middlewares=traefik"
      - "traefik.http.routers.traefik.service=traefik-svc"
      - "traefik.http.services.traefik-svc.loadbalancer.server.port=8080"
      - "traefik.http.middlewares.traefik.basicauth.realm=Lab Notebook"
      - "traefik.http.middlewares.traefik.basicauth.users=pfafflab:$$2y$$05$$q/dphAPEb0M5Oaq4hgPcCuBUqqIAVm3EO/a7FvfJaq419c4O1uMtG"

    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"

  connexion:
    image: marcosf2/backend
    build:
      context: .
    container_name: "backend"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.connexion.rule=Host(`kaladin.ncsa.illinois.edu`) && PathPrefix(`/api`)"
      - "traefik.http.routers.connexion.middlewares=traefik"
      - "traefik.http.middlewares.connexion.basicauth.realm=Lab Notebook"
      - "traefik.http.services.connexion.loadbalancer.server.port=8000"

#    develop:
#      watch:
#        - action: rebuild
#          path: .

  nextjs:
    image: marcosf2/frontend
    container_name: "frontend"
    build:
      context: ../qdata-webapp
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nextjs.rule=Host(`kaladin.ncsa.illinois.edu`)"
      - "traefik.http.services.nextjs.loadbalancer.server.port=3000"
      - "traefik.http.routers.nextjs.middlewares=traefik"
      - "traefik.http.middlewares.nextjs.basicauth.realm=Lab Notebook"
#    develop:
#      watch:
#        - action: rebuild
#          path: ../qdata-webapp/

