# This file will override the configation options in the docker-compose
# file. Copy this file to the same folder as docker-compose with name '.env'

# ----------------------------------------------------------------------
# GENERAL CONFIGURATION
# ----------------------------------------------------------------------

# project name (-p flag for docker-compose)
COMPOSE_PROJECT_NAME=dev

# If true the pytest fixture to create a testing environment will be run to create a fresh testing notebook.
# The path of the notebook is the parent of the value NOTEBOOK_ROOT
CREATE_TESTING_ENVIRONMENT=True

# ======================================================================
# DOCKER COMPOSE CONFIGURATION
# ======================================================================

# ----------------------------------------------------------------------
# TRAEFIK CONFIGURATION
# ----------------------------------------------------------------------

# hostname of server
TRAEFIK_HOST=localhost

# ----------------------------------------------------------------------
# CONNEXION CONFIGURATION
# ----------------------------------------------------------------------

# Path in disk that will hold all of the toml files.
VOLUME_ORIGIN="./test/tmp"

# Path of toml file where the notebook begins. Will be overwritten if CREATE_TESTING_ENVIRONMENT is True.
# If you don't have a root toml file, follow the instructions in the README to create one.
NOTEBOOK_ROOT="./test/tmp"

# Resource path. This is a path to a directory where all of the uploaded images and content will go on disk.
# It is good practice to have it inside the volume origin to not have any unintended consequences.
RESOURCE_PATH="./test/pytest/tmp/resource"

# Specifies the users that will be available to select in the notebook.
# Note that this has no relation to the user and password required to login to the notebook.
USERS="Smaug, Spyro, Drogon, Charizard"

# Address where the API is hosted. If deploying it on a machine this should match the URL_HOST.
API_URL_PREFIX="http://localhost:8000"

# Address of the web-app. If deploying it on a machine this should match API_URL_PREFIX.
URL_HOST="http://localhost:3000"
